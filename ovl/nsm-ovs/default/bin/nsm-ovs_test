#! /bin/sh
##
## nsm-ovs_test --
##
##   Test script for nsm-ovs executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
test -n "$DOMAIN" || DOMAIN=xcluster
yamld=/etc/kubernetes/nsm-ovs

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

cmd_tcase_check_namespaces() {
	test_namespaces
	tlog "$(kubectl version --short=true | grep Server)"
}
cmd_tcase_check_nodes() {
	test_nodes
}
cmd_tcase_vip_routes() {
	tcase "Set VIP routes (ECMP)"
	vip_route
}

cmd_tcase_ifup() {
	local iface=eth2
	test -n "$1" && iface=$1
	tcase "Interface up [$iface]"
	echo 0 > /proc/sys/net/ipv6/conf/$iface/accept_dad
	ip link set up dev $iface
}

cmd_tcase_start_nsm() {
	tcase "Start NSM base"
	kubectl apply -f /etc/kubernetes/nsm/nsm-base.yaml || tdie
	test_deployment nsm-registry 180
	test_daemonset nsmgr 30
}

cmd_tcase_start_forwarder() {
	tcase "Start NSM forwarder-$NSM_FORWARDER"
	local f=/etc/kubernetes/nsm/forwarder-$NSM_FORWARDER.yaml
	test -r $f || tdie "Not readable [$f]"
	kubectl apply -f $f || tdie
	test_daemonset forwarder-$NSM_FORWARDER 120 || tdie
}

cmd_tcase_start_nse() {
	tcase "Start NSE nse-vlan-$NSM_FORWARDER"
	local f=/etc/kubernetes/nsm/nse-vlan-$NSM_FORWARDER.yaml
	test -r $f || tdie "Not readable [$f]"
	kubectl apply -f $f || tdie
	test_deployment nse-vlan-$NSM_FORWARDER 120 || tdie
}

cmd_tcase_start_nsc() {
	tcase "Start NSE NSC"
	kubectl apply -f /etc/kubernetes/nsm/nsc-vlan.yaml || tdie
	test_daemonset vlan-nsc 120 || tdie
}

cmd_tcase_collect_addresses() {
	tcase "Collect NSC addresses"
	local pod
	mkdir -p $tmp
	for pod in $(kubectl get pods -l app=vlan-nsc -o name); do
		echo $pod >> $tmp/out
		tex "kubectl exec $pod -- ip addr show dev nsm-1 > /dev/null 2>&1" || tdie nsm-1
		kubectl exec $pod -- ip addr show dev nsm-1 >> $tmp/out || tdie
	done
	cat $tmp/out
	grep -Eo '169\.254\.100\.[1-9]+/[1-9]+' $tmp/out > /tmp/adr
	grep -Eo '100:100::[1-9]+/[1-9]+' $tmp/out >> /tmp/adr
	#cat /tmp/adr >&2
}

cmd_tcase_internal_ping() {
	tcase "Ping pod-to-pods"
	local pod ipm ip
	for ipm in $(cat /tmp/adr); do
		ip=$(echo $ipm | cut -d/ -f1)
		tlog "ping address $ip"
	done
	for pod in $(kubectl get pods -l app=vlan-nsc -o name); do
		for ipm in $(cat /tmp/adr); do
			ip=$(echo $ipm | cut -d/ -f1)
			kubectl exec $pod -- ping -W1 -c1 $ip || tdie "$pod $ip"
		done
	done
}

cmd_tcase_external_ping() {
    tcase "Ping the vpp-nsc's from router vm-202"
	# Note that eth2 on the VMs is eth3 on router vm-202
    if ! ip link show eth3.100 2>&1; then
		echo 0 > /proc/sys/net/ipv6/conf/eth3/accept_dad
        ip link set up eth3
        ip link add link eth3 name eth3.100 type vlan id 100
		echo 0 > /proc/sys/net/ipv6/conf/eth3.100/accept_dad
        ip link set up dev eth3.100
        ip addr add 169.254.100.254/24 dev eth3.100
        ip -6 addr add 100:100::254/64 dev eth3.100
    fi
    pushv 30
	local ipm ip
	# DAD causes a delay before addresses are usable
	for ipm in $(cat /tmp/adr); do
		ip=$(echo $ipm | cut -d/ -f1)
        tex "ping -c1 -W1 $ip" || tdie "$ip"
	done
    popv
}

. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
